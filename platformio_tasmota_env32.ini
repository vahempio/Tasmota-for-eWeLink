[env:tasmota32_base]
framework                   = ${common.framework}
platform                    = ${core32.platform}
platform_packages           = ${core32.platform_packages}
board_build.filesystem      = ${common.board_build.filesystem}
custom_unpack_dir           = ${common.custom_unpack_dir}
board                       = esp32_4M
monitor_speed               = 115200
upload_port                 = ${common.upload_port}
upload_resetmethod          = ${common.upload_resetmethod}
extra_scripts               = ${esp32_defaults.extra_scripts}
build_unflags               = ${core32.build_unflags}
build_flags                 = ${core32.build_flags}
lib_ldf_mode                = ${common.lib_ldf_mode}
lib_compat_mode             = ${common.lib_compat_mode}
lib_extra_dirs              = ${common.lib_extra_dirs}
                              lib/libesp32
                              lib/libesp32_lvgl
                              lib/libesp32_div
                              lib/libesp32_eink
lib_ignore                  =
                              HTTPUpdateServer
                              ESP RainMaker
                              WiFiProv
                              USB
                              SPIFFS
                              ESP32 Azure IoT Arduino
                              ESP32 Async UDP
                              ESP32 BLE Arduino
;                              SimpleBLE
                              NetBIOS
                              ESP32
                              Preferences
                              BluetoothSerial
; Disable next if you want to use ArduinoOTA in Tasmota32 (default disabled)
                              ArduinoOTA
; Add files to Filesystem for all env (global). Remove no files entry and add add a line with the file to include
; Example for adding the Partition Manager
; custom_files_upload =
; tasmota/berry/modules/Partition_Manager.tapp
custom_files_upload         = no_files

[env:tasmota32-safeboot]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DFIRMWARE_SAFEBOOT
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              =
                          TTGO TWatch Library
                          NimBLE-Arduino
                          Micro-RTSP
                          epdiy

[env:tasmota32]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DFIRMWARE_TASMOTA32

[env:tasmota32_8M]
extends                 = env:tasmota32_base
board                   = esp32_8M
build_flags             = ${env:tasmota32_base.build_flags} -DFIRMWARE_TASMOTA32

[env:tasmota32_16M]
extends                 = env:tasmota32_base
board                   = esp32_16M
build_flags             = ${env:tasmota32_base.build_flags} -DFIRMWARE_TASMOTA32

[env:tasmota32-webcam]
extends                 = env:tasmota32_base
board                   = esp32-cam
build_flags             = ${env:tasmota32_base.build_flags} -DFIRMWARE_WEBCAM
lib_extra_dirs          = lib/lib_ssl, lib/libesp32

[env:tasmota32-odroidgo]
extends                 = env:tasmota32-lvgl
board                   = esp32-odroid

[env:tasmota32-core2]
extends                 = env:tasmota32-lvgl
board                   = esp32-m5core2
build_flags             = ${env:tasmota32-lvgl.build_flags} -DUSE_I2S_SAY_TIME -DUSE_I2S_WEBRADIO -DUSE_SENDMAIL -DUSE_ESP32MAIL
lib_extra_dirs          = lib/libesp32, lib/libesp32_lvgl, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display, lib/lib_audio

[env:tasmota32-bluetooth]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DFIRMWARE_BLUETOOTH
lib_extra_dirs          = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_i2c, lib/lib_ssl

[env:tasmota32-display]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DFIRMWARE_DISPLAYS
lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_display, lib/lib_ssl

[env:tasmota32-lvgl]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DFIRMWARE_LVGL
board_build.f_cpu       = 160000000L
lib_extra_dirs          = lib/libesp32, lib/libesp32_lvgl, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display

[env:tasmota32-ir]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DUSE_IR_REMOTE_FULL -DFIRMWARE_IR
lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_ssl

[env:tasmota32solo1]
extends                 = env:tasmota32_base
board                   = esp32_solo1_4M
platform                = ${core32solo1.platform}
platform_packages       = ${core32solo1.platform_packages}
build_flags             = ${core32solo1.build_flags} -DFIRMWARE_TASMOTA32

[env:tasmota32solo1-safeboot]
extends                 = env:tasmota32_base
board                   = esp32_solo1_4M
platform                = ${core32solo1.platform}
platform_packages       = ${core32solo1.platform_packages}
build_flags             = ${env:tasmota32_base.build_flags} -DFIRMWARE_SAFEBOOT
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              =
                          TTGO TWatch Library
                          NimBLE-Arduino
                          Micro-RTSP
                          epdiy

[env:tasmota32-zbbrdgpro]
extends                 = env:tasmota32_base
board                   = esp32_4M_FS
platform                = ${core32itead.platform}
platform_packages       = ${core32itead.platform_packages}
build_flags             = ${env:tasmota32_base.build_flags}
                          -DFIRMWARE_ZBBRDGPRO
custom_files_upload     = ${env:tasmota32_base.custom_files_upload}
                          tools/fw_SonoffZigbeeBridgePro_cc2652/Sonoff_ZBPro.autoconf
                          tasmota/berry/zigbee/cc2652_flasher.be
                          tasmota/berry/zigbee/intelhex.be
                          tasmota/berry/zigbee/sonoff_zb_pro_flasher.be
                          tools/fw_SonoffZigbeeBridgePro_cc2652/SonoffZBPro_coord_20220219.hex
lib_extra_dirs          = lib/lib_basic, lib/lib_ssl, lib/libesp32

[env:tasmota32-nspanel]
extends                 = env:tasmota32_base
platform                = ${core32itead.platform}
platform_packages       = ${core32itead.platform_packages}
build_flags             = ${env:tasmota32_base.build_flags}
                          -DFIRMWARE_NSPANEL

[env:tasmota32c3-safeboot]
extends                 = env:tasmota32_base
board                   = esp32c3
build_unflags           = ${env:tasmota32_base.build_unflags}
                          -flto
                          -mtarget-align
build_flags             = ${env:tasmota32_base.build_flags} -DFIRMWARE_SAFEBOOT
                          -fno-lto
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              =
                          TTGO TWatch Library
                          NimBLE-Arduino
                          Micro-RTSP
                          epdiy

[env:tasmota32c3]
extends                 = env:tasmota32_base
board                   = esp32c3
build_unflags           = ${env:tasmota32_base.build_unflags}
                          -flto
                          -mtarget-align
build_flags             = ${env:tasmota32_base.build_flags} -DFIRMWARE_TASMOTA32
                          -fno-lto
lib_ignore              =
                          TTGO TWatch Library
                          Micro-RTSP
                          epdiy

[env:tasmota32c3cdc-safeboot]
extends                 = env:tasmota32c3-safeboot
board                   = esp32c3cdc

[env:tasmota32c3cdc]
extends                 = env:tasmota32c3
board                   = esp32c3cdc

[env:tasmota32s2-safeboot]
extends                 = env:tasmota32_base
board                   = esp32s2
build_flags             = ${env:tasmota32_base.build_flags} -DFIRMWARE_SAFEBOOT
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              =
                          TTGO TWatch Library
                          NimBLE-Arduino
                          Micro-RTSP
                          epdiy

[env:tasmota32s2]
extends                 = env:tasmota32_base
board                   = esp32s2
build_flags             = ${env:tasmota32_base.build_flags} -DFIRMWARE_TASMOTA32
lib_ignore              =
                          TTGO TWatch Library
                          NimBLE-Arduino
                          Micro-RTSP
                          epdiy

[env:tasmota32s2cdc-safeboot]
extends                 = env:tasmota32s2-safeboot
board                   = esp32s2cdc

[env:tasmota32s2cdc]
extends                 = env:tasmota32s2
board                   = esp32s2cdc

[env:tasmota32s3-safeboot]
extends                 = env:tasmota32_base
board                   = esp32s3
build_flags             = ${env:tasmota32_base.build_flags} -DFIRMWARE_SAFEBOOT
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              =
                          TTGO TWatch Library
                          NimBLE-Arduino
                          Micro-RTSP
                          epdiy

[env:tasmota32s3]
extends                 = env:tasmota32_base
board                   = esp32s3
build_flags             = ${env:tasmota32_base.build_flags} -DFIRMWARE_TASMOTA32
lib_ignore              =
                          TTGO TWatch Library
                          Micro-RTSP
                          epdiy

[env:tasmota32s3cdc-safeboot]
extends                 = env:tasmota32s3-safeboot
board                   = esp32s3cdc

[env:tasmota32s3cdc]
extends                 = env:tasmota32s3
board                   = esp32s3cdc

[env:tasmota32-AF]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=af_AF -DFIRMWARE_TASMOTA32

[env:tasmota32-BG]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=bg_BG -DFIRMWARE_TASMOTA32

[env:tasmota32-BR]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=pt_BR -DFIRMWARE_TASMOTA32

[env:tasmota32-CN]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=zh_CN -DFIRMWARE_TASMOTA32

[env:tasmota32-CZ]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=cs_CZ -DFIRMWARE_TASMOTA32

[env:tasmota32-DE]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=de_DE -DFIRMWARE_TASMOTA32

[env:tasmota32-ES]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=es_ES -DFIRMWARE_TASMOTA32

[env:tasmota32-FR]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=fr_FR -DFIRMWARE_TASMOTA32

[env:tasmota32-FY]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=fy_NL -DFIRMWARE_TASMOTA32

[env:tasmota32-GR]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=el_GR -DFIRMWARE_TASMOTA32

[env:tasmota32-HE]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=he_HE -DFIRMWARE_TASMOTA32

[env:tasmota32-HU]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=hu_HU -DFIRMWARE_TASMOTA32

[env:tasmota32-IT]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=it_IT -DFIRMWARE_TASMOTA32

[env:tasmota32-KO]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=ko_KO -DFIRMWARE_TASMOTA32

[env:tasmota32-NL]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=nl_NL -DFIRMWARE_TASMOTA32

[env:tasmota32-PL]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=pl_PL -DFIRMWARE_TASMOTA32

[env:tasmota32-PT]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=pt_PT -DFIRMWARE_TASMOTA32

[env:tasmota32-RO]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=ro_RO -DFIRMWARE_TASMOTA32

[env:tasmota32-RU]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=ru_RU -DFIRMWARE_TASMOTA32

[env:tasmota32-SE]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=sv_SE -DFIRMWARE_TASMOTA32

[env:tasmota32-SK]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=sk_SK -DFIRMWARE_TASMOTA32

[env:tasmota32-TR]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=tr_TR -DFIRMWARE_TASMOTA32

[env:tasmota32-TW]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=zh_TW -DFIRMWARE_TASMOTA32

[env:tasmota32-UK]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=uk_UA -DFIRMWARE_TASMOTA32

[env:tasmota32-VN]
extends                 = env:tasmota32_base
build_flags             = ${env:tasmota32_base.build_flags} -DMY_LANGUAGE=vi_VN -DFIRMWARE_TASMOTA32
